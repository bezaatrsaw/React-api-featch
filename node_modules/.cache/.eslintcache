[{"/home/tiltekdev1/Desktop/form-submit/src/index.js":"1","/home/tiltekdev1/Desktop/form-submit/src/App.js":"2","/home/tiltekdev1/Desktop/form-submit/src/reportWebVitals.js":"3","/home/tiltekdev1/Desktop/form-submit/src/form-submit/posts.js":"4","/home/tiltekdev1/Desktop/form-submit/src/form-submit/Form.js":"5","/home/tiltekdev1/Desktop/form-submit/src/form-submit/products.js":"6","/home/tiltekdev1/Desktop/form-submit/src/form-submit/productDetail.js":"7"},{"size":535,"mtime":1666004560000,"results":"8","hashOfConfig":"9"},{"size":685,"mtime":1666093633984,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1666004560000,"results":"11","hashOfConfig":"9"},{"size":1594,"mtime":1666014741822,"results":"12","hashOfConfig":"9"},{"size":2641,"mtime":1666080744338,"results":"13","hashOfConfig":"9"},{"size":1828,"mtime":1666093181742,"results":"14","hashOfConfig":"9"},{"size":1312,"mtime":1666093318610,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"9c3su2",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/home/tiltekdev1/Desktop/form-submit/src/index.js",[],[],[],"/home/tiltekdev1/Desktop/form-submit/src/App.js",["43"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Form from './form-submit/Form';\nimport Posts from './form-submit/posts';\nimport Products from './form-submit/products';\nimport Productdetail from './form-submit/productDetail';\nimport { BrowserRouter, Route,Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n      \n      <Route path=\"/\" element ={<Form/>} />\n      <Route path=\"posts\" element ={<Posts/>} />\n      <Route path=\"products\" element ={<Products/>}/>\n      <Route path=\"products/:productid\" element ={<Productdetail/>}/>\n      {/* <Posts></Posts> */}\n  \n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/tiltekdev1/Desktop/form-submit/src/reportWebVitals.js",[],[],"/home/tiltekdev1/Desktop/form-submit/src/form-submit/posts.js",["44"],[],"import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./posts.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nfunction Posts() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch(\" https://dummyjson.com/posts\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setPosts(result.posts);\n          setIsLoaded(true);\n        },\n\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [isLoaded]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n  <div className=\"button-container\">\n     <div className=\"post-product\">\n        <Link className=\"button\" to={\"/posts\"}>posts</Link>\n        <Link className=\"button\" to={\"/products\"}>products</Link>\n      </div>\n    <div className=\"posts-container\">\n     \n      {posts.length > 0 ? (\n        posts.map((post) => (\n          <div className=\"containt\" key={post.id}>\n            <h3>{post.title}</h3>\n            <h3>{post.userId}</h3>\n            <h3>{post.id}</h3>\n            <h3>{post.body}</h3>\n            <h3>{post.reactions}</h3>\n            <div className=\"tags\">\n              {\n                post.tags.map((tag) => (\n                  <h3>{tag}</h3>\n                ))\n              }\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>There is no data</div>\n      )}\n    </div>\n    </div>\n  );\n}\nexport default Posts;\n","/home/tiltekdev1/Desktop/form-submit/src/form-submit/Form.js",["45"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './form.css';\n\n\nfunction Form() {\n  //state for regestration\n  const [username, setUserName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  // state for checking errors\n  const [submitted, setSubmitted] = useState(false)\n  const [showSuccess, setShowsuccess] = useState(\"\")\n  const [valid, setValid] = useState(false)\n  const [error, setError] = useState(false)\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n\n  }, [valid, showSuccess])\n\n  function Submit(e) {\n\n    e.preventDefault();\n    const data = { username, email, password }\n    handleSubmit(data)\n    console.log(data)\n    if (valid) {\n      setShowsuccess(true)\n      setTimeout(() => {\n        setShowsuccess(false)\n      }, 3000)\n    }\n    else {\n      setShowsuccess(false)\n    }\n\n    navigate('/posts')\n\n  }\n\n\n  const handleSubmit = (values) => {\n    if (values.userName && values.email && values.password) {\n      setValid(true);\n    }\n    setSubmitted(true)\n  }\n\n\n\n\n\n  const successMessage = () => {\n    return (\n      <div\n        className=\"success\"\n        style={{\n          display: submitted ? '' : 'none',\n        }}>\n        <h3> { } successfully registered!!</h3>\n      </div>\n    );\n  };\n\n\n\n  const errorMessage = () => {\n    return (\n      <div\n        className=\"error\"\n        style={{\n          display: error ? '' : 'none',\n        }}>\n        <h1>Please enter all the fields</h1>\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"container\">\n      <form className=\"form-container\" onSubmit={handleSubmit}>\n        {showSuccess && <div>success!Thankyou for registering</div>}\n\n        <div className=\"messages\">\n          {errorMessage()}\n          {successMessage()}\n        </div>\n        <input\n          value={username} type='text' name='username' placeholder=\"username\" required onChange={(e) => setUserName(e.target.value)} />\n\n        {!username && <span id=\"user-name-error\"> enter a username</span>}\n\n        <input\n          value={email} type='text' name='email' onChange={(e) => setEmail(e.target.value)} placeholder=\"email\" required />\n\n        {!email && <span id=\"email-error\">Please enter a email</span>}\n\n        <input value={password} type='password' name='password' placeholder=\"password\" required onChange={(e) => setPassword(e.target.value)} />\n\n        {!password && <span id=\"password-error\">Please enter a password</span>}\n\n        <button type='button' onClick={(e) => Submit(e)} >Submit</button>\n      </form>\n\n    </div>\n\n\n\n  )\n}\nexport default Form;","/home/tiltekdev1/Desktop/form-submit/src/form-submit/products.js",["46","47"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./products.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Products() {\n  const [products, setProducts] = useState([]);\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/products\")\n      .then((res) => res.json())\n      .then((result) => {\n        setProducts(result.products);\n      });\n  }, []);\n  // navigate('/productDetail');\n  return (\n    <div className=\"button-container\">\n      <div className=\"post-product\">\n        <Link className=\"button\" to={\"/posts\"}>\n          posts\n        </Link>\n        <Link className=\"button\" to={\"/products\"}>\n          products\n        </Link>\n      </div>\n      <div className=\"product-container\">\n        {products.length > 0\n          ? products.map((result) => (\n\n              <div className=\"products\" key={result.id}>\n            \n                <h3>{result.title}</h3>\n                <h3>{result.description}</h3>\n                <h3>{result.price}</h3>\n                \n                <h3>{result.rating}</h3>\n                <h3>{result.stock}</h3>\n                <h3>{result.brand}</h3>\n                <h3>{result.category}</h3>\n             \n             \n                <div className=\"image-container\">\n                  {result.images.map((img) => (\n                    <img src={img} className=\"image\" />\n                  ))}\n                </div>\n                <div className=\"detail-button\">\n                <button className=\"button-detail\">\n                <Link style={{color: \"white\", textDecoration: 'none', textTransform: 'uppercase'}} to={`${result.id}`}>detail</Link>\n                </button>\n\n                </div>\n              </div>\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n  \n}\nexport default Products;\n","/home/tiltekdev1/Desktop/form-submit/src/form-submit/productDetail.js",["48","49","50","51","52","53","54"],[],"import react, { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport \"./productDetail.css\";\nimport { Link, Navigate, Route, useNavigate, useParams } from \"react-router-dom\";\n\nfunction Productdetail() {\n  const [product, setProductDetail] = useState({});\n  const [loading, setLoading]  = useState(false)\n\n  const {productid}=useParams()\n\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(`https://dummyjson.com/products/${productid}`)\n      .then((res) => res.json())\n      .then((result) => {\n        setLoading(false)\n        setProductDetail(result);\n      });\n  }, []);\n\n\n\n  if(loading){\n    return(\n        <div>Loading......</div>\n    )\n  }\n\n  return (\n      <div className=\"products\" key={product.id}>\n       \n        <h3>{product.title}</h3>\n        <h3>{product.description}</h3>\n        <h3>{product.price}</h3>\n\n        <h3>{product.rating}</h3>\n        <h3>{product.stock}</h3>\n        <h3>{product.brand}</h3>\n        <h3>{product.category}</h3>\n\n        <div className=\"image-container\">\n            {\n                product && product.images && \n                product.images.map((img, index) => (\n                    <img src={img} className=\"image\" key={index} />\n                  ))\n            }\n         \n         </div>\n      </div>\n  );\n}\nexport default Productdetail;\n",{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":27},{"ruleId":"55","severity":1,"message":"60","line":15,"column":17,"nodeType":"57","messageId":"58","endLine":15,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":3,"column":16,"nodeType":"57","messageId":"58","endLine":3,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":45,"column":21,"nodeType":"63","endLine":45,"endColumn":56},{"ruleId":"55","severity":1,"message":"64","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"65","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":14},{"ruleId":"55","severity":1,"message":"66","line":4,"column":16,"nodeType":"57","messageId":"58","endLine":4,"endColumn":24},{"ruleId":"55","severity":1,"message":"67","line":4,"column":26,"nodeType":"57","messageId":"58","endLine":4,"endColumn":31},{"ruleId":"55","severity":1,"message":"59","line":4,"column":33,"nodeType":"57","messageId":"58","endLine":4,"endColumn":44},{"ruleId":"68","severity":1,"message":"69","line":21,"column":6,"nodeType":"70","endLine":21,"endColumn":8,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"62","line":47,"column":21,"nodeType":"63","endLine":47,"endColumn":68},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'setError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'react' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productid'. Either include it or remove the dependency array.","ArrayExpression",["72"],{"desc":"73","fix":"74"},"Update the dependencies array to be: [productid]",{"range":"75","text":"76"},[587,589],"[productid]"]